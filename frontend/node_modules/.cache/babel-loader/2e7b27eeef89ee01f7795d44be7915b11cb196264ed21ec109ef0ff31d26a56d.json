{"ast":null,"code":"var _jsxFileName = \"F:\\\\Intern years 2\\\\Food-Order\\\\Ordering-Foods\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// CartContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../service/apiService';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [tableId, setTableId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user._id) {\n      loadCartFromDB(user._id);\n    }\n  }, [user]);\n  const loadCartFromDB = async userId => {\n    setIsLoading(true);\n    try {\n      const res = await apiService.getCart(userId);\n      setCartItems(res.items || []);\n      setTableId(res.table || null);\n    } catch (err) {\n      console.error('Không thể tải giỏ hàng:', err);\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    // Lấy và xử lý tableId từ localStorage nếu có\n    const storedTable = localStorage.getItem('tableId');\n    if (storedTable) {\n      const cleanTableId = storedTable.startsWith(':') ? storedTable.slice(1) : storedTable;\n      setTableId(cleanTableId);\n    }\n    if (user !== null && user !== void 0 && user._id) {\n      loadCartFromDB(user._id);\n    }\n  }, [user]);\n  const addToCart = async food => {\n    if (!(user !== null && user !== void 0 && user._id)) return alert('Bạn cần đăng nhập trước');\n    const id = food.id || food._id;\n    const existing = cartItems.find(item => item.id === id);\n    const newQuantity = existing ? existing.quantity + 1 : 1;\n    try {\n      await apiService.addToCart({\n        userId: user._id,\n        foodId: id,\n        quantity: 1\n      });\n      if (existing) {\n        setCartItems(prev => prev.map(item => item.id === id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item));\n      } else {\n        setCartItems(prev => [...prev, {\n          ...food,\n          id,\n          quantity: 1\n        }]);\n      }\n    } catch (err) {\n      console.error('Không thể thêm vào giỏ hàng:', err);\n    }\n  };\n  const updateQuantity = async (foodId, newQuantity) => {\n    if (!(user !== null && user !== void 0 && user._id)) return;\n    if (newQuantity <= 0) return removeFromCart(foodId);\n    try {\n      await apiService.updateCart({\n        userId: user._id,\n        foodId,\n        quantity: newQuantity\n      });\n      setCartItems(prev => prev.map(item => item.id === foodId ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    } catch (err) {\n      console.error('Không thể cập nhật giỏ hàng:', err);\n    }\n  };\n  const removeFromCart = async foodId => {\n    if (!(user !== null && user !== void 0 && user._id)) return;\n    try {\n      await apiService.removeFromCart({\n        userId: user._id,\n        foodId\n      });\n      setCartItems(prev => prev.filter(item => item.id !== foodId));\n    } catch (err) {\n      console.error('Không thể xoá khỏi giỏ hàng:', err);\n    }\n  };\n  const clearCart = async () => {\n    if (!(user !== null && user !== void 0 && user._id)) return;\n    try {\n      await apiService.clearCart(user._id);\n      setCartItems([]);\n      setTableId(null);\n    } catch (err) {\n      console.error('Không thể xoá giỏ hàng:', err);\n    }\n  };\n  const getTotalPrice = () => cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const getTotalItems = () => cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      getTotalPrice,\n      getTotalItems,\n      tableId,\n      setTableId,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ljnOVFmQW3Wzl0tsaq4I2ZPfeJo=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","AuthContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","tableId","setTableId","isLoading","setIsLoading","user","_id","loadCartFromDB","userId","res","getCart","items","table","err","console","error","storedTable","localStorage","getItem","cleanTableId","startsWith","slice","addToCart","food","alert","id","existing","find","item","newQuantity","quantity","foodId","prev","map","updateQuantity","removeFromCart","updateCart","filter","clearCart","getTotalPrice","reduce","sum","price","getTotalItems","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["F:/Intern years 2/Food-Order/Ordering-Foods/frontend/src/contexts/CartContext.js"],"sourcesContent":["// CartContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { apiService } from '../service/apiService'\r\nimport { AuthContext } from './AuthContext'\r\n\r\nconst CartContext = createContext()\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([])\r\n  const [tableId, setTableId] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { user } = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    if (user?._id) {\r\n      loadCartFromDB(user._id)\r\n    }\r\n  }, [user])\r\n  \r\n  const loadCartFromDB = async (userId) => {\r\n    setIsLoading(true)\r\n    try {\r\n      const res = await apiService.getCart(userId)\r\n      setCartItems(res.items || [])\r\n      setTableId(res.table || null)\r\n    } catch (err) {\r\n      console.error('Không thể tải giỏ hàng:', err)\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n  // Lấy và xử lý tableId từ localStorage nếu có\r\n    const storedTable = localStorage.getItem('tableId');\r\n    if (storedTable) {\r\n      const cleanTableId = storedTable.startsWith(':') ? storedTable.slice(1) : storedTable;\r\n      setTableId(cleanTableId);\r\n    }\r\n\r\n    if (user?._id) {\r\n      loadCartFromDB(user._id);\r\n    }\r\n  }, [user]);\r\n\r\n  const addToCart = async (food) => {\r\n    if (!user?._id) return alert('Bạn cần đăng nhập trước')\r\n\r\n    const id = food.id || food._id\r\n    const existing = cartItems.find(item => item.id === id)\r\n    const newQuantity = existing ? existing.quantity + 1 : 1\r\n\r\n    try {\r\n      await apiService.addToCart({\r\n        userId: user._id,\r\n        foodId: id,\r\n        quantity: 1,\r\n      })\r\n\r\n      if (existing) {\r\n        setCartItems(prev =>\r\n          prev.map(item =>\r\n            item.id === id ? { ...item, quantity: item.quantity + 1 } : item\r\n          )\r\n        )\r\n      } else {\r\n        setCartItems(prev => [...prev, { ...food, id, quantity: 1 }])\r\n      }\r\n    } catch (err) {\r\n      console.error('Không thể thêm vào giỏ hàng:', err)\r\n    }\r\n  }\r\n\r\n  const updateQuantity = async (foodId, newQuantity) => {\r\n    if (!user?._id) return\r\n\r\n    if (newQuantity <= 0) return removeFromCart(foodId)\r\n\r\n    try {\r\n      await apiService.updateCart({\r\n        userId: user._id,\r\n        foodId,\r\n        quantity: newQuantity,\r\n      })\r\n\r\n      setCartItems(prev =>\r\n        prev.map(item =>\r\n          item.id === foodId ? { ...item, quantity: newQuantity } : item\r\n        )\r\n      )\r\n    } catch (err) {\r\n      console.error('Không thể cập nhật giỏ hàng:', err)\r\n    }\r\n  }\r\n\r\n  const removeFromCart = async (foodId) => {\r\n    if (!user?._id) return\r\n\r\n    try {\r\n      await apiService.removeFromCart({ userId: user._id, foodId })\r\n      setCartItems(prev => prev.filter(item => item.id !== foodId))\r\n    } catch (err) {\r\n      console.error('Không thể xoá khỏi giỏ hàng:', err)\r\n    }\r\n  }\r\n\r\n  const clearCart = async () => {\r\n    if (!user?._id) return\r\n    try {\r\n      await apiService.clearCart(user._id)\r\n      setCartItems([])\r\n      setTableId(null)\r\n    } catch (err) {\r\n      console.error('Không thể xoá giỏ hàng:', err)\r\n    }\r\n  }\r\n\r\n  const getTotalPrice = () =>\r\n    cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n\r\n  const getTotalItems = () =>\r\n    cartItems.reduce((sum, item) => sum + item.quantity, 0)\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearCart,\r\n        getTotalPrice,\r\n        getTotalItems,\r\n        tableId,\r\n        setTableId,\r\n        isLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext)\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider')\r\n  }\r\n  return context\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}